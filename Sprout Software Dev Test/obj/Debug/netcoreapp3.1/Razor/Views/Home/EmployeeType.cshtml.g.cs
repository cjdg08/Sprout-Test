#pragma checksum "C:\Users\psadmin\source\repos\Sprout Software Dev Test\Sprout Software Dev Test\Views\Home\EmployeeType.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e1270252decd1c9f35de1e075afd7cc0cda89470"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_EmployeeType), @"mvc.1.0.view", @"/Views/Home/EmployeeType.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\psadmin\source\repos\Sprout Software Dev Test\Sprout Software Dev Test\Views\_ViewImports.cshtml"
using Sprout_Software_Dev_Test;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\psadmin\source\repos\Sprout Software Dev Test\Sprout Software Dev Test\Views\_ViewImports.cshtml"
using Sprout_Software_Dev_Test.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e1270252decd1c9f35de1e075afd7cc0cda89470", @"/Views/Home/EmployeeType.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5e19505ddbee5b120378acb6a8a588d91e81dbbf", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_EmployeeType : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\psadmin\source\repos\Sprout Software Dev Test\Sprout Software Dev Test\Views\Home\EmployeeType.cshtml"
  
    ViewData["Title"] = "EmployeeType";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-md-12"">
        <button id=""AddEmpType"" class=""btn btn-success"">New Employee Type</button>
    </div>
</div>
<div class=""row"">
    <div class=""col-md-12"">
        <table class=""table table-hover table-striped table-bordered"" cellspacing=""0"" id=""tblEmployeeTypeList""></table>
    </div>
</div>

<div class=""modal fade"" id=""NewEmpType"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h3 class=""modal-title"">Add Employee Type</h3>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>
            </div>
            <div class=""modal-body"">
                <div class=""row"">
                    <div class=""col-xs-12 col-sm-12 col-md-12 col-lg-12"">
                        <div class=""form-group"">
                            <label for=""EmployeeType"" clas");
            WriteLiteral(@"s=""control-label col-xs-12 col-sm-12 col-md-4 col-lg-4"">Employee Type</label>
                            <div class=""col-xs-12 col-sm-12 col-md-12col-lg-12"">
                                <input type=""text"" id=""EmployeeType"" class=""form-control"" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-xs-12 col-sm-12 col-md-12 col-lg-12"">
                        <div class=""form-group"">
                            <label for=""SalaryType"" class=""control-label col-xs-12 col-sm-12 col-md-4 col-lg-4"">Salary Type</label>
                            <div class=""col-xs-12 col-sm-12 col-md-12 col-lg-12"">
                                <select id=""SalaryType"" class=""form-control"">
                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1270252decd1c9f35de1e075afd7cc0cda894706056", async() => {
                WriteLiteral("- Select Salary Type -");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1270252decd1c9f35de1e075afd7cc0cda894707066", async() => {
                WriteLiteral("Monthly");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e1270252decd1c9f35de1e075afd7cc0cda894708262", async() => {
                WriteLiteral("Daily");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row"" id=""divWorkDays"">
                    <div class=""col-xs-12 col-sm-12 col-md-12 col-lg-12"">
                        <div class=""form-group"">
                            <label for=""WorkDaysPerMonth"" class=""control-label col-xs-12 col-sm-12 col-md-4 col-lg-4"">Work Days/Month</label>
                            <div class=""col-xs-12 col-sm-12 col-md-12 col-lg-12"">
                                <input type=""text"" id=""WorkDaysPerMonth"" class=""form-control days"" value=""0.00"" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-xs-12 col-sm-12 col-md-12 col-lg-12"">
                        <div class=""form-group"">
                            <label for=""TaxPercentage"" class");
            WriteLiteral(@"=""control-label col-xs-12 col-sm-12 col-md-4 col-lg-4"">Tax Percentage</label>
                            <div class=""col-xs-12 col-sm-12 col-md-12 col-lg-12"">
                                <input type=""text"" id=""TaxPercentage"" class=""form-control percentage"" value=""0.00 %"" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" id=""Save"" class=""btn btn-primary""><i class=""fa fa-save""></i>&nbsp;Save</button>
                <button type=""button"" class=""btn btn-outline-secondary"" data-dismiss=""modal""><i class=""fa fa-times""></i>&nbsp;Cancel</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {

            $(""#AddEmpType"").click(function () {
                $(""#NewEmpType"").modal({ backdrop: 'static', keyboard: false }, 'show');
                $(""#SalaryType"").change();
                $(""#SalaryType"").change(function () {
                    if ($(this).val() == 1) {
                        $(""#divWorkDays"").css(""display"", """");
                    }
                    else {
                        $(""#divWorkDays"").css(""display"", ""none"");
                        $(""#WorkDaysPerMonth"").val(""0.00"");
                    }
                });
            });

            $(""#Save"").click(function () {
                if ($(""#EmployeeType"").val() == """") {
                    toastr.warning(""Employee type is required, Please enter employee type"");
                    return;
                }
                if ($(""#SalaryType"").val() == """") {
                    toastr.warning(""Salary type is required, Please select salar");
                WriteLiteral(@"y type"");
                    return;
                }
                if ($(""#SalaryType"").val() == 1) {
                    if ($(""#WorkDaysPerMonth"").val() == """" || $(""#WorkDaysPerMonth"").val() == 0) {
                        toastr.warning(""Work days/month is required, Please enter Work days/month"");
                        return;
                    }
                }

                if (confirm(""Are you sure you want to save?"")) {
                    $.ajax({
                        type: 'POST',
                        url: '");
#nullable restore
#line 115 "C:\Users\psadmin\source\repos\Sprout Software Dev Test\Sprout Software Dev Test\Views\Home\EmployeeType.cshtml"
                         Write(Url.Action("SaveEmployeeType"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        data: {
                            EmployeeTypeDescription: $(""#EmployeeType"").val(),
                            SalaryType: $(""#SalaryType"").val(),
                            WorkDaysPerMonth: $(""#WorkDaysPerMonth"").val(),
                            TaxPercentage: accounting.formatMoney($(""#TaxPercentage"").val(), """", 2, """", ""."")
                        },
                        dataType: 'JSON',
                        success: function (data) {
                            if (data == ""Success"") {
                                toastr.success(""Employee Type successfully saved."");
                                $(""#NewEmpType"").modal('hide');
                                $(""#EmployeeType"").val('');
                                $(""#SalaryType"").val(0);
                                $(""#WorkDaysPerMonth"").val('0.00');
                                $(""#TaxPercentage"").val('0.00 %');
                                GetEmployeeTypeList();
               ");
                WriteLiteral(@"             }
                            else {
                                toastr.error(""Error saving data."");
                            }
                        }
                    });
                }
            });

            GetEmployeeTypeList();
        });

        function GetEmployeeTypeList() {
            table = $('#tblEmployeeTypeList').DataTable({
                bLengthChange: false,
                responsive: true,
                destroy: true,
                order: [[0, 'asc']],
                paging: false,
                ordering: false,
                ajax: {
                    type: ""GET"",
                    url: '");
#nullable restore
#line 154 "C:\Users\psadmin\source\repos\Sprout Software Dev Test\Sprout Software Dev Test\Views\Home\EmployeeType.cshtml"
                     Write(Url.Action("GetEmployeeTypeList"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    dataType: 'json',
                    dataSrc: function (json) {
                        var a = new Array();
                        for (var b = 0; b <= json.length - 1; b++) {
                            var c = json[b];
                            a.push({
                                'EmployeeTypeID': c.employeeTypeID,
                                'EmployeeTypeDescription': c.employeeTypeDescription,
                                'SalaryType': c.salaryType,
                                'WorkDaysPerMonth': c.workDaysPerMonth,
                                'TaxPercentage': accounting.formatMoney(c.taxPercentage, { symbol: ""%"", format: ""%v %s"" })
                            });
                        }
                        return a;
                    },
                },
                columns: [
                    {
                        title: ""Action"",
                        ""render"": function (data, type, row, meta) {
                 ");
                WriteLiteral(@"           var show = ""<a class='btn btn-primary btn-xs' title='View Class Record' href='/Home/EditEmployee/"" + row.EmployeeTypeID + ""'>Edit Record</a> "";
                            return show;
                        }
                    },
                    {
                        title: ""Employee Type"",
                        data: ""EmployeeTypeDescription""
                    },
                    {
                        title: ""Salary Type"",
                        ""render"": function (data, type, row, meta) {
                            var show = """";
                            if (row.SalaryType == 1) {
                                show = ""Monthly""
                            }
                            else {
                                show = ""Daily""
                            }
                            return show;
                        }
                    },
                    {
                        title: ""Work Days Per Month"",
               ");
                WriteLiteral(@"         data: ""WorkDaysPerMonth""
                    },
                    {
                        title: ""Tax Percentage"",
                        data: ""TaxPercentage""
                    }
                ],
            });
            return table;
        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
